!非同期モード。
// WebAPIを利用して，日本語を多言語へ翻訳する例
// （このWebAPIは，なでしこパット専用です）
API="https://3u3vc7vfz1.execute-api.ap-northeast-1.amazonaws.com/dev/translate"。

// (1) 画面の準備
元文＝"今日も一日頑張りましょう"
入力エディタ＝元文のテキストエリア作成。
入力エディタの「cols」に「40」をDOM属性設定。
入力エディタの「rows」に「5」をDOM属性設定。
改行作成。

// (2) 翻訳先の言語を選ぶためのセレクトボックスを作成
話者＝[]。
話者一覧取得を反復。
　　T=対象["lang"]。
　　S=対象["lang"] & " - " & 対象["name"]。
    F=はい。

    // 日本語は追加しない
　　もし，T=「ja-JP」ならば，F=いいえ。

　　// 重複させない
　　C=話者からTを配列検索。
　　もし，C>=0ならば，F=いいえ。

    // フラグ(F)が「はい」ならば，話者を追加する
　　もし，Fならば，話者にSを配列追加。
ここまで。
話者リスト＝話者のセレクトボックス作成。
もし，(話者の配列要素数)<1ならば，「話者を取得できないので，もう一度実行してください。」のエラー発生。
翻訳ボタン＝「翻訳」のボタン作成。改行作成。

// (3) 翻訳する処理
翻訳ボタンをクリックした時には
　　変換元＝"ja"。                // 変換元は日本語
　　S＝話者リストのテキスト取得。
　　変換後＝Sの2文字左部分。      // 変換する言語
　　選択話者＝Sの5文字左部分。    // 翻訳した文を読む話者

    // (4) WebAPIへ送信するURIを生成する
　　元文＝入力エディタのテキスト取得。
　　URI="{API}?source={変換元}&target={変換後}&input_text={元文}"。

    // (5) WebAPIから，翻訳された文を受信する
　　URIからAJAX受信。
　　翻訳文＝対象。

    // (6) 翻訳された結果を表示する
　　元文を表示。
　　翻訳文を青色で表示。
　　改行作成。

    // (7) 翻訳された結果を，その言語の話者で音読する
　　選択話者に話者設定。
　　翻訳文を話す。
ここまで。
