// 「数当てゲーム」サンプルプログラム

// 定数の定義
音ID＝「audio1」。
正解絵＝クジラ。
残念絵＝黒クジラ。
正解音＝ピンポン。
残念音＝ブブー。

// 初期値設定
サイコロ面＝１０。		// #5 数を当てる範囲。「６」ならば１～６までの範囲。
回答可能数＝５。		// #6 ユーザーが答えられる回数。
サイコロ＝（サイコロ面の乱数）＋１。
正解済＝０。
回答数＝１。

// 画面設定
絵ID＝正解絵を絵追加。			// #7 あらかじめ読み込んでおくことで，レイアウトが崩れるのを防止。
改行作成。
音IDに残念音を音読込。			// #8 あらかじめ読み込んでおくことで，再生時のタイムラグを減らす。
「コンピュータがサイコロを振りました。」と表示。
「１から｛サイコロ面｝のどれかです。」と表示。
「その数を｛回答可能数｝回以内に当ててみよう！」と表示。
入力エディタ＝「」のエディタ作成。
回答ボタン＝「答える」のボタン作成。
改行作成。
改行作成。

// メインの処理
回答ボタンをクリックした時には
　　Ａ＝入力エディタのテキスト取得。
　　答え＝Ａを半角変換。

　　もし、答え＝空ならば
　　　　「答えを入力してね」と表示。					// #9 何も入力していないときの処理
　　違えばもし、（答え＜１）または（答え＞サイコロ面）ならば
　　　　「１から｛サイコロ面｝の間で答えてね」と表示。	// #10 範囲外の値のときの処理
　　違えば												// #11 正誤を判定する処理
　　　　「｛回答数｝回目の予想は…｛答え｝ですね…？」と表示。

　　　　// 正解・不正解の判定処理
　　　　もし、答え＝サイコロならば
　　　　　　「正解！」と表示。
　　　　　　絵IDに正解絵を絵読込。
　　　　　　音IDに正解音を音読込。音IDを音再生。
　　　　　　正解済＝１。							// #12 正解したら「正解済」フラグを立てる。
　　　　違えば
　　　　　　絵IDに残念絵を絵読込。
　　　　　　音IDに残念音を音読込。音IDを音再生。

　　　　　　もし、答え＞サイコロならば				// #13 不正解時はヒントを表示
　　　　　　　　「残念。もっと小さいよ」と表示。
　　　　　　違えば
　　　　　　　　「残念。もっと大きいよ」と表示。
　　　　　　ここまで。
　　　　ここまで。

　　　　回答数＝回答数＋１。
　　　　もし、（回答数＞回答可能数）または（正解済＝１）ならば	// #13 もう答えられないなら
　　　　　　「正解は｛サイコロ｝でした。」と表示。
　　　　　　入力エディタの「disabled」にオンをDOM属性設定。		// #14 入力できないようにする
　　　　　　回答ボタンの「disabled」にオンをDOM属性設定。		// #15 ボタンを押せないようにする
　　　　ここまで。

　　ここまで。
　　入力エディタに、空をテキスト設定。				// #16 入力ボックスの文字を消す
ここまで。
