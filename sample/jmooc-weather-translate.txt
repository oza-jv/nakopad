!非同期モード
// ネットワーク通信を利用して
// 天気予報を取得するサンプル
// （データは天気予報API(https://weather.tsukumijima.net/)を利用して作成）

// (1) 取得したい情報を変数に入れておく
都市番号＝「140010」。　   // 140010は神奈川県東部，140020は西部
時期＝0。　　　　　　　 　 // 0-今日,1-明日,2-明後日

// (2) 天気予報を取得するためのURIを指定する。
// 都市番号は，地点定義表 https://weather.tsukumijima.net/primary_area.xmlで確認する。
API＝「https://weather.tsukumijima.net/api/forecast?city=」＆都市番号。

// (3) URIからJSON形式の情報を受信する。
// 辞書型配列「天気情報」に代入する。
APIからAJAX受信。
天気情報＝対象をJSONデコード。
　　
// (4) 地域名を取得する。
地域＝天気情報['title']。
地域を表示。
改行作成。

// (5) 明日の予報を取得する。
予報＝天気情報['forecasts'][時期]。
予報['dateLabel']を表示。       　　// 「今日」「明日」「明後日」

予報['telop']を表示。          　　 // もっとも簡単な天気予報
予報['detail']['weather']を表示。　 // 予報の詳細
予報['image']['url']を絵追加。  　　// 画像のURLを取得して表示
改行作成。

// (6) 概況を取得する。
概況＝天気情報['description']。
概況['headlineText']を表示。

// (7) 翻訳する文章を生成する
元文＝「｛天気情報['title']｝。｛予報['detail']['weather']｝」。

// (2) 翻訳先の言語を選ぶためのセレクトボックスを作成
話者＝[]。
話者一覧取得を反復。
　　S=対象["lang"] & " - " & 対象["name"]。
　　話者にSを配列追加。
ここまで。
もし，(話者の配列要素数)<1ならば，「話者を取得できないので，もう一度実行してください。」のエラー発生。
話者リスト＝話者のセレクトボックス作成。
改行作成。
翻訳ボタン＝「翻訳」のボタン作成。
音読ボタン＝「音読」のボタン作成。
改行作成。改行作成。

// (3) 翻訳する処理
翻訳文＝「」。
選択話者＝「」。
翻訳ボタンをクリックした時には
    // (4) WebAPIへ送信するURIを生成する
　　S＝話者リストのテキスト取得。
　　変換後＝Sの2文字左部分。      // 変換先の言語
　　選択話者＝Sの5文字左部分。    // 翻訳した文を読む話者
　　URI="{翻訳API}?target={変換後}&input_text={元文}"。

    // (5) WebAPIから，翻訳された文を受信する
　　URIからAJAX受信。
　　翻訳文＝対象。

    // (6) 翻訳された結果を表示する
　　元文を表示。
　　翻訳文を青色で表示。
　　改行作成。
ここまで。

音読ボタンをクリックした時には
　　もし，翻訳文＝空ならば，戻る。
　　
    // (7) 翻訳された結果を，その言語の話者で音読する
　　選択話者に話者設定。
　　翻訳文を話す。
ここまで。
